async function sendRequest(
    options: ApiRequestOptions,
    url: string,
    formData: FormData | undefined,
    body: any,
    headers: Record<string, string>,
    onCancel: OnCancel,
    openApiConfig: OpenAPIConfig
): Promise<AxiosResponse<any>> {
    const source = axios.CancelToken.source();
    const newUrl = openApiConfig.EDGE ? url.replace("{edge}", openApiConfig.EDGE) : url;

    const config: AxiosRequestConfig = {
        url: newUrl,
        headers,
        data: body || formData,
        method: options.method,
        cancelToken: source.token,
        validateStatus: () => true,
    };

    onCancel(() => source.cancel('The user aborted a request.'));

    try {
        return await axios.request(config);
    } catch (error) {
        const axiosError = error as AxiosError;
        if (axiosError.response) {
            return axiosError.response;
        }
        throw error;
    }
}
